export const userResponses = {
    USER_CREATE_SUCCESS: "User Created Successfully & credentials mailed",
    USER_CREATE_SUCCESS_WITHOUT_MAIL: "User Created Successfully & not mailed",
    USER_UPDATE_SUCCESS: "User Updated Successfully",
  },
  authResponses = {
    AUTH_SUCCESS: "User Authenticated Successfully",
  },
  userSearchResponses = {
    RESULTS_FETCH: "Users fetched successfully",
  },
  uploadResponses = {
    VIDEO_UPLOAD_SUCCESS: "Video uploaded successfully",
  },
  authErrors = {
    AUTH_ERROR: "Server is allocated at the moment",
    USER_NOT_FOUND: "User not found with the first name given",
    USER_PENDING: "User hasn't set his password yet",
    INVALID_PASSWORD: "Incorrect password provided",
    PASSWORD_EMPTY: "User Password should not be empty",
    PASSWORD_STRING: "User Password must be a string",
    PASSWORD_REQUIRED: "User Password is required",
    INVALID_TOKEN: "Unauthorized on grounds of Invalid token",
    FIRST_NAME_REQUIRED: "User first name is required",
    FIRST_NAME_EMTPY: "User first name should not be empty",
    FIRST_NAME_STRING: "User first name must be a string",
    FIRST_NAME_INVALID:
      "User first name should contain minium 3 letters without any spaces and special characters",
  },
  userErrors = {
    DUPLICATE_USER: "Duplicate User found to create",
    USER_NOT_FOUND: "No user is found with the given parameters",
    EMAIL_REQUIRED: "User Email is required",
    EMAIL_INVALID: "User Email format is not as per the standard",
    EMAIL_EMPTY: "User Email should not be empty",
    EMAIL_STRING: "User Email must be a string",
    FIRST_NAME_REQUIRED: "User first name is required",
    FIRST_NAME_EMTPY: "User first name should not be empty",
    FIRST_NAME_STRING: "User first name must be a string",
    FIRST_NAME_INVALID:
      "User first name should contain minium 3 letters without any spaces and special characters",
    LAST_NAME_STRING: "User last name must be a string",
    LAST_NAME_EMTPY: "User last name should not be empty",
    LAST_NAME_REQUIRED: "User last name must be a string",
    LAST_NAME_INVALID:
      "User last name should contain minium 3 letters without any spaces and special characters",
    PHONE_STRING: "Phone number must contain numbers in string format",
    PHONE_EMPTY: "Phone number should not be empty",
    PHONE_REQUIRED: "Phone number is required",
    PHONE_INVALID:
      "Phone number should be of 10 digits as per Indian Telecom norms",
    USER_AVATAR_STRING: "User avatar must be a type of string",
    USER_BIO_STRING: "User Bio must be a type of string",
    USER_BIO_MAX: "User Bio must be at most 500 characters long",
  },
  userSearchErrors = {
    CURRENT_PAGE_REQUIRED: "Current page number is required",
    CURRENT_PAGE_AS_NUMBER: "Current page must be a number",
    CURRENT_PAGE_VALIDATION: "Current page must be greater than 0",
    PER_PAGE_RECORD_REQUIRED: "Total records per page is required",
    PER_PAGE_RECORD_AS_NUMBER: "Total records per page must be a number",
    PER_PAGE_RECORD_VALIDATION: "Total records per page must be a number",
    SEARCH_TEXT_REQUIRED: "Search Text is required",
    SEARCH_TEXT_AS_STRING: "Search Text must be a string",
    USERS_ERROR: "Server is allocated at the moment",
  },
  envErrors = {
    PORT_REQUIRED: "Node JS hosting port is required",
    PORT_MUST_BE_NUMBER: "Node JS hosting port must be a number",
    MONGODB_URL_REQUIRED: "Couldn't find mongoDB URL",
    MONGODB_URL_MUST_BE_STRING: "MongoDB URL must be a type of string",
    MONGODB_URL_EMPTY: "MongoDB URL should not be empty",
    JWT_SECRET_REQUIRED: "Couldn't find mongoDB URL",
    JWT_SECRET_MUST_BE_STRING: "MongoDB URL must be a type of string",
    JWT_SECRET_EMPTY: "MongoDB URL should not be empty",
    MAIL_HOST_REQUIRED: "Mail host info is required",
    MAIL_HOST_MUST_BE_STRING: "Mail Host must be a type of string",
    MAIL_HOST_EMPTY: "Mail host should not be empty",
    MAIL_USER_REQUIRED: "Mail User email address is required",
    MAIL_USER_MUST_BE_STRING:
      "Mail User email address must be a type of string",
    MAIL_USER_EMPTY: "Mail User email address should not be empty",
    MAIL_PASSWORD_EMPTY: "Mail User password should not be empty",
    MAIL_PASSWORD_REQUIRED: "Mail User password is required",
    MAIL_PASSWORD_MUST_BE_STRING: "Mail User password must be a type of string",
  },
  uploadErrors = {
    TITLE_REQUIRED: "Video Title is required",
    TITLE_EMTPY: "Video Title should not be empty",
    TITLE_STRING: "Video Title must be a string",
    TITLE_MAX: "Video Title must be at most 30 characters long",
    DESCRIPTION_REQUIRED: "Video Description is required",
    DESCRIPTION_EMTPY: "Video Description should not be empty",
    DESCRIPTION_STRING: "Video Description must be a string",
    DESCRIPTION_MAX: "Video Description must be at most 120 characters long",
    THUMBNAIL_REQUIRED: "Video Description is required",
    THUMBNAIL_EMTPY: "Video Description should not be empty",
    THUMBNAIL_STRING: "Video Description must be a string",
    NO_FILE_GIVEN: "No file is given to upload",
  },
  serverErrors = {
    INTERNAL_SERVER_ERROR: "Something went wrong",
    ERROR_HASHING_PASSWORD: "Error hashing password",
    ERROR_HASH_COMPARE: "Error comparing passwords",
  };
